== Specs (brainstorming state) ==

- Question

    - We identify it is a question with a question word: (What|How much)
    - Then the object of the question: (price/value | balance | transferred/transaction)
    - Then the REFERENCE/TIME/UNIT

    Example questions:

    ; Value of bitcoin

      - (What|How much)                                 -> Question word 

        NOW                                             -> Time
        (is) the (price|value) of bitcoins              -> Object

        PAST
        (was|has been) the (price|value) of bitcoins
        (yesterday|last week|last month)        

        FUTURE
        (will be) the (price|value) of bitcoins

        (at) (btce|bitstamp|btcchina)                   -> Reference

        (in) (dollars|euros|yuans|guiness pints)        -> Unit

    ; Balance of an address
    
      - (QUESTION WORD)
      - is the (balance)
      - of (xxxxxx)     
      - in (UNIT)

    ; Bitcoins sent/received 

            SENT               RECEIVED                
    
      -              (QUESTION WORD)
      - (sent)               (received)
      - by, from             
      - (public address)     (public address)

      Example: How much has received (public address)
               How much has send (public address)
               What has been received by (public address)

               Tell me total the Bitcoins sent from (public address)

    ; Transaction value
    
      - (QUESTION WORDS)
      - (total input|total output|total)
      - have been
      - (transferred|transaction)
      - with (transaction hash)

      Example: How much has been (transferred) with (hash)
               What is the (total input) of the (transaction) (hash)


- Status

  - There are many kinds of Questions
  - A Question can be answered, and then replied

  - An Answer is a Status that only contains few params
    but doesn't have a body (json)

  - An Answer can be sent since it is a Status

  Status(optional: [text, json]);

- Examples:

  s = new Status("Hello World!");
  s.send()

  s = new Status(json);
  s.send() 			  // Throws a "Duplicated Status"

  answer = s.answer() // Returns an Answer() Object, which is a Status()
                      // object with only a text and in_reply_to_status_id 
                      // variables setted

  answer.reply() 	    // Calls Status.send()
  answer.privateReply() // Sends a Direct Message to User instead

  // We can also directly create an Answer to a Question
  answer = new Answer(question)

  // Later on we could add more reply options
  answer.retweet()
  answer.email()
  answer.fb()

  // What about chaining them ?
  answer.reply().email().fb().send() // Each one returns the answer object
           |       |      |     |
        Each one fires asynchronously

  // More fun 
  new Question(answer.question)